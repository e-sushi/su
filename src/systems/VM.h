/*

    The virtual machine of the compiler which interprets amu's intermediate representation (AIR) bytecode
    as generated by Generator.

*/

#ifndef AMU_MACHINE_H
#define AMU_MACHINE_H

#include "representations/Frame.h"

namespace amu {

struct VM {
    // stack as an array of bytes
    u8* stack;
    u8* sp;

    Array<Frame> frames;
    Frame frame;


    // ~~~~~~~ interface ~~~~~~~


    // creates a machine with some entry Code object
    // places the instruction pointer at the start of the code's AIR
    static VM*
    create(Code* entry); 

    void
    destroy();

    // begins execution of the code 
    void
    run();

    void
    print_stack();

    void
    print_frame_vars();
};

} // namespace amu

#endif // AMU_MACHINE_H