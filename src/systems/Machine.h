/*

    The virtual machine of the compiler which interprets amu's intermediate representation (AIR) bytecode
    as generated by Generator.

*/

#ifndef AMU_MACHINE_H
#define AMU_MACHINE_H

namespace amu {

struct CallFrame {
    BC* ip;
    Register* fp;
    Function* f;
}; 

struct Machine {
    // representation of the stack as an unlimited amount of registers
    Array<Register> registers;

    Array<CallFrame> frames;
    CallFrame frame;

    Register* stack_top;


    // ~~~~~~~ interface ~~~~~~~


    // creates a machine with some entry Code object
    // places the instruction pointer at the start of the code's AIR
    static Machine*
    create(Code* entry); 

    // begins execution of the code 
    void
    run();

    void
    print_stack();
};

} // namespace amu

#endif // AMU_MACHINE_H