/* 1694550889 [2023/09/12 13:34:49]
    generated by diagnostics.raku from diagnostics.def
*/
enum kind {
	OK=0,
	path_not_found = 1,
	compiler_expected_a_path_for_arg = 2,
	compiler_unknown_option = 3,
	compiler_no_path_given = 4,
	compiler_expected_path_or_paths_for_arg_option = 5,
	lexer_unexpected_eof_single_quotes = 6,
	lexer_unexpected_eof_double_quotes = 7,
	lexer_multiline_comment_missing_end = 8,
	lexer_unknown_directive = 9,
	lexer_invalid_token = 10,
	parser_expected_type = 11,
	parser_expected_label_or_import = 12,
	parser_expected_identifier = 13,
	parser_expected_import_directive = 14,
	parser_expected_colon_for_label = 15,
	parser_unknown_identifier = 16,
	parser_label_already_defined = 17,
	parser_missing_close_brace = 18,
	parser_expected_comma_or_closing_paren_tuple = 19,
	parser_unexpected_token = 20,
	parser_expected_open_paren = 21,
	parser_expected_close_paren = 22,
	parser_expected_open_brace = 23,
	parser_expected_close_brace = 24,
	parser_label_group_missing_id = 25,
	parser_label_missing_colon = 26,
	parser_switch_missing_open_paren = 27,
	parser_switch_missing_close_paren = 28,
	parser_switch_missing_open_brace = 29,
	parser_switch_empty_body = 30,
	parser_switch_missing_match_arrow_after_expr = 31,
	parser_switch_missing_comma_after_match_arm = 32,
	parser_for_missing_open_paren = 33,
	parser_for_missing_close_paren = 34,
	parser_for_expected_some_identfier = 35,
	parser_for_label_group_not_allowed = 36,
	parser_for_expected_in = 37,
	parser_tuple_expected_comma_or_close_paren = 38,
	parser_tuple_positional_arg_but_found_label = 39,
	parser_if_missing_open_paren = 40,
	parser_if_missing_close_paren = 41,
	parser_missing_semicolon = 42,
	parser_missing_function_return_type = 43,
	parser_missing_open_brace_for_struct = 44,
	parser_struct_only_labels_allowed = 45,
	parser_struct_member_functions_not_allowed = 46,
	parser_extraneous_close_brace = 47,
	parser_unexpected_token_in_module = 48,
	parser_array_missing_close_square = 49,
	parser_runtime_structures_not_allowed = 50,
	parser_struct_duplicate_member_name = 51,
	sema_func_ret_expected_typeref = 52,
	sema_cannot_implict_coerce = 53,
	sema_cant_find_binop_trait = 54,
	sema_mismatch_argument_type = 55,
	sema_too_many_arguments = 56,
	sema_not_enough_arguments = 57,
	sema_invalid_type_lhs_access = 58,
	sema_cannot_access_members_scalar_type = 59,
	sema_array_types_dont_have_member = 60,
	sema_cannot_access_members_of_function_type = 61,
	sema_too_many_levels_of_indirection_for_access = 62,
	sema_unknown_member = 63,
	sema_cannot_have_a_variable_of_void_type = 64,
	sema_if_mismatched_types_cannot_coerce = 65,
	sema_return_value_of_func_block_cannot_be_coerced_to_func_return_type = 66,
	sema_break_outside_of_loop = 67,
	sema_cant_use_whatever_as_value = 68,
	sema_control_expressions_can_only_be_used_at_the_end_of_logical_operators = 69,
	internal_valid_path_but_internal_err = 70,
};

const global String strings[] = {
	"path_not_found",
	"compiler_expected_a_path_for_arg",
	"compiler_unknown_option",
	"compiler_no_path_given",
	"compiler_expected_path_or_paths_for_arg_option",
	"lexer_unexpected_eof_single_quotes",
	"lexer_unexpected_eof_double_quotes",
	"lexer_multiline_comment_missing_end",
	"lexer_unknown_directive",
	"lexer_invalid_token",
	"parser_expected_type",
	"parser_expected_label_or_import",
	"parser_expected_identifier",
	"parser_expected_import_directive",
	"parser_expected_colon_for_label",
	"parser_unknown_identifier",
	"parser_label_already_defined",
	"parser_missing_close_brace",
	"parser_expected_comma_or_closing_paren_tuple",
	"parser_unexpected_token",
	"parser_expected_open_paren",
	"parser_expected_close_paren",
	"parser_expected_open_brace",
	"parser_expected_close_brace",
	"parser_label_group_missing_id",
	"parser_label_missing_colon",
	"parser_switch_missing_open_paren",
	"parser_switch_missing_close_paren",
	"parser_switch_missing_open_brace",
	"parser_switch_empty_body",
	"parser_switch_missing_match_arrow_after_expr",
	"parser_switch_missing_comma_after_match_arm",
	"parser_for_missing_open_paren",
	"parser_for_missing_close_paren",
	"parser_for_expected_some_identfier",
	"parser_for_label_group_not_allowed",
	"parser_for_expected_in",
	"parser_tuple_expected_comma_or_close_paren",
	"parser_tuple_positional_arg_but_found_label",
	"parser_if_missing_open_paren",
	"parser_if_missing_close_paren",
	"parser_missing_semicolon",
	"parser_missing_function_return_type",
	"parser_missing_open_brace_for_struct",
	"parser_struct_only_labels_allowed",
	"parser_struct_member_functions_not_allowed",
	"parser_extraneous_close_brace",
	"parser_unexpected_token_in_module",
	"parser_array_missing_close_square",
	"parser_runtime_structures_not_allowed",
	"parser_struct_duplicate_member_name",
	"sema_func_ret_expected_typeref",
	"sema_cannot_implict_coerce",
	"sema_cant_find_binop_trait",
	"sema_mismatch_argument_type",
	"sema_too_many_arguments",
	"sema_not_enough_arguments",
	"sema_invalid_type_lhs_access",
	"sema_cannot_access_members_scalar_type",
	"sema_array_types_dont_have_member",
	"sema_cannot_access_members_of_function_type",
	"sema_too_many_levels_of_indirection_for_access",
	"sema_unknown_member",
	"sema_cannot_have_a_variable_of_void_type",
	"sema_if_mismatched_types_cannot_coerce",
	"sema_return_value_of_func_block_cannot_be_coerced_to_func_return_type",
	"sema_break_outside_of_loop",
	"sema_cant_use_whatever_as_value",
	"sema_control_expressions_can_only_be_used_at_the_end_of_logical_operators",
	"internal_valid_path_but_internal_err",
};

enum language {
	en,
	jp,
	esp,
};

enum severity {
	error,
	warning,
};

