/* 1696904566 [2023/10/09 19:22:46]
    generated by diagnostics.raku from diagnostics.def
*/
enum kind {
	OK=0,
	path_not_found = 1,
	compiler_expected_a_path_for_arg = 2,
	compiler_unknown_option = 3,
	compiler_no_path_given = 4,
	compiler_expected_path_or_paths_for_arg_option = 5,
	lexer_unexpected_eof_single_quotes = 6,
	lexer_unexpected_eof_double_quotes = 7,
	lexer_multiline_comment_missing_end = 8,
	lexer_unknown_directive = 9,
	lexer_unknown_svar = 10,
	lexer_invalid_token = 11,
	lexer_filename_cant_be_identifier = 12,
	parser_expected_type = 13,
	parser_expected_label_or_import = 14,
	parser_expected_identifier = 15,
	parser_expected_import_directive = 16,
	parser_expected_colon_for_label = 17,
	parser_unknown_identifier = 18,
	parser_label_already_defined = 19,
	parser_missing_close_brace = 20,
	parser_expected_comma_or_closing_paren_tuple = 21,
	parser_unexpected_token = 22,
	parser_expected_open_paren = 23,
	parser_expected_close_paren = 24,
	parser_expected_open_brace = 25,
	parser_expected_close_brace = 26,
	parser_label_group_missing_id = 27,
	parser_label_missing_colon = 28,
	parser_switch_missing_open_paren = 29,
	parser_switch_missing_close_paren = 30,
	parser_switch_missing_open_brace = 31,
	parser_switch_empty_body = 32,
	parser_switch_missing_match_arrow_after_expr = 33,
	parser_switch_missing_comma_after_match_arm = 34,
	parser_for_missing_open_paren = 35,
	parser_for_missing_close_paren = 36,
	parser_for_expected_some_identfier = 37,
	parser_for_label_group_not_allowed = 38,
	parser_for_expected_in = 39,
	parser_for_cannot_declare_variables = 40,
	parser_tuple_expected_comma_or_close_paren = 41,
	parser_array_expected_comma_or_close_square = 42,
	parser_tuple_positional_arg_but_found_label = 43,
	parser_if_missing_open_paren = 44,
	parser_if_missing_close_paren = 45,
	parser_missing_semicolon = 46,
	parser_missing_function_return_type = 47,
	parser_missing_open_brace_for_struct = 48,
	parser_struct_only_labels_allowed = 49,
	parser_struct_member_functions_not_allowed = 50,
	parser_extraneous_close_brace = 51,
	parser_unexpected_token_in_module = 52,
	parser_array_missing_close_square = 53,
	parser_runtime_structures_not_allowed = 54,
	parser_struct_duplicate_member_name = 55,
	parser_static_array_count_must_eval_to_integer = 56,
	parser_static_array_size_cannot_be_negative = 57,
	parser_subscript_missing_close_square = 58,
	parser_runtime_variable_cannot_be_used_as_static_array_count = 59,
	parser_intrinsic_print_missing_parenthesis = 60,
	parser_intrinsic_print_empty = 61,
	parser_tuple_type_plain_expression = 62,
	parser_tuple_type_expression_must_be_explicitly_typed = 63,
	parser_missing_open_brace_for_module = 64,
	sema_func_ret_expected_typeref = 65,
	sema_cannot_implict_coerce = 66,
	sema_cant_find_binop_trait = 67,
	sema_mismatch_argument_type = 68,
	sema_too_many_arguments = 69,
	sema_not_enough_arguments = 70,
	sema_invalid_type_lhs_access = 71,
	sema_cannot_access_members_scalar_type = 72,
	sema_array_types_dont_have_member = 73,
	sema_cannot_access_members_of_function_type = 74,
	sema_too_many_levels_of_indirection_for_access = 75,
	sema_unknown_member = 76,
	sema_module_unknown_member = 77,
	sema_cannot_have_a_variable_of_void_type = 78,
	sema_if_mismatched_types_cannot_coerce = 79,
	sema_return_value_of_func_block_cannot_be_coerced_to_func_return_type = 80,
	sema_break_outside_of_loop = 81,
	sema_cant_use_whatever_as_value = 82,
	sema_cant_use_whatever_as_variable_type = 83,
	sema_control_expressions_can_only_be_used_at_the_end_of_logical_operators = 84,
	sema_compile_time_code_cannot_reference_runtime_memory = 85,
	sema_array_literal_type_mismatch = 86,
	sema_static_array_count_expr_not_compile_time = 87,
	sema_static_array_expr_must_resolve_to_integer = 88,
	sema_static_array_size_cannot_be_negative = 89,
	sema_type_is_not_subscriptable = 90,
	sema_subscript_must_evaluate_to_integer = 91,
	sema_subscript_out_of_bounds = 92,
	sema_subscript_negative_not_allowed_on_pointer = 93,
	sema_comparison_between_pointer_and_scalar = 94,
	sema_float_in_pointer_arithmetic = 95,
	sema_pointer_equality_non_zero_integer = 96,
	sema_pointer_integer_not_additive = 97,
	sema_pointer_arithmetic_not_additive = 98,
	sema_pointer_on_rhs_of_arithmetic = 99,
	sema_static_array_invalid_member = 100,
	sema_modulo_not_defined_on_floats = 101,
	sema_cant_take_reference_of_value = 102,
	sema_reference_operator_can_only_be_used_on_types_or_lvalues = 103,
	sema_dereference_operator_only_works_on_pointers = 104,
	sema_range_mismatched_types = 105,
	sema_range_non_scalar_not_supported = 106,
	sema_casting_between_non_scalar_types_not_supported = 107,
	sema_intrinsic_print_named_arg = 108,
	sema_unary_comptime_expr_not_comptime = 109,
	sema_static_array_unusally_large = 110,
	sema_tuple_struct_initializer_unknown_member = 111,
	sema_tuple_struct_initializer_cannot_cast_expr_to_member = 112,
	sema_tuple_struct_initializer_named_member_already_satisfied = 113,
	sema_tuple_struct_initializer_too_many_elements = 114,
	sema_tuple_cast_to_structured_not_yet_supported = 115,
	internal_valid_path_but_internal_err = 116,
};

const global String strings[] = {
	"path_not_found",
	"compiler_expected_a_path_for_arg",
	"compiler_unknown_option",
	"compiler_no_path_given",
	"compiler_expected_path_or_paths_for_arg_option",
	"lexer_unexpected_eof_single_quotes",
	"lexer_unexpected_eof_double_quotes",
	"lexer_multiline_comment_missing_end",
	"lexer_unknown_directive",
	"lexer_unknown_svar",
	"lexer_invalid_token",
	"lexer_filename_cant_be_identifier",
	"parser_expected_type",
	"parser_expected_label_or_import",
	"parser_expected_identifier",
	"parser_expected_import_directive",
	"parser_expected_colon_for_label",
	"parser_unknown_identifier",
	"parser_label_already_defined",
	"parser_missing_close_brace",
	"parser_expected_comma_or_closing_paren_tuple",
	"parser_unexpected_token",
	"parser_expected_open_paren",
	"parser_expected_close_paren",
	"parser_expected_open_brace",
	"parser_expected_close_brace",
	"parser_label_group_missing_id",
	"parser_label_missing_colon",
	"parser_switch_missing_open_paren",
	"parser_switch_missing_close_paren",
	"parser_switch_missing_open_brace",
	"parser_switch_empty_body",
	"parser_switch_missing_match_arrow_after_expr",
	"parser_switch_missing_comma_after_match_arm",
	"parser_for_missing_open_paren",
	"parser_for_missing_close_paren",
	"parser_for_expected_some_identfier",
	"parser_for_label_group_not_allowed",
	"parser_for_expected_in",
	"parser_for_cannot_declare_variables",
	"parser_tuple_expected_comma_or_close_paren",
	"parser_array_expected_comma_or_close_square",
	"parser_tuple_positional_arg_but_found_label",
	"parser_if_missing_open_paren",
	"parser_if_missing_close_paren",
	"parser_missing_semicolon",
	"parser_missing_function_return_type",
	"parser_missing_open_brace_for_struct",
	"parser_struct_only_labels_allowed",
	"parser_struct_member_functions_not_allowed",
	"parser_extraneous_close_brace",
	"parser_unexpected_token_in_module",
	"parser_array_missing_close_square",
	"parser_runtime_structures_not_allowed",
	"parser_struct_duplicate_member_name",
	"parser_static_array_count_must_eval_to_integer",
	"parser_static_array_size_cannot_be_negative",
	"parser_subscript_missing_close_square",
	"parser_runtime_variable_cannot_be_used_as_static_array_count",
	"parser_intrinsic_print_missing_parenthesis",
	"parser_intrinsic_print_empty",
	"parser_tuple_type_plain_expression",
	"parser_tuple_type_expression_must_be_explicitly_typed",
	"parser_missing_open_brace_for_module",
	"sema_func_ret_expected_typeref",
	"sema_cannot_implict_coerce",
	"sema_cant_find_binop_trait",
	"sema_mismatch_argument_type",
	"sema_too_many_arguments",
	"sema_not_enough_arguments",
	"sema_invalid_type_lhs_access",
	"sema_cannot_access_members_scalar_type",
	"sema_array_types_dont_have_member",
	"sema_cannot_access_members_of_function_type",
	"sema_too_many_levels_of_indirection_for_access",
	"sema_unknown_member",
	"sema_module_unknown_member",
	"sema_cannot_have_a_variable_of_void_type",
	"sema_if_mismatched_types_cannot_coerce",
	"sema_return_value_of_func_block_cannot_be_coerced_to_func_return_type",
	"sema_break_outside_of_loop",
	"sema_cant_use_whatever_as_value",
	"sema_cant_use_whatever_as_variable_type",
	"sema_control_expressions_can_only_be_used_at_the_end_of_logical_operators",
	"sema_compile_time_code_cannot_reference_runtime_memory",
	"sema_array_literal_type_mismatch",
	"sema_static_array_count_expr_not_compile_time",
	"sema_static_array_expr_must_resolve_to_integer",
	"sema_static_array_size_cannot_be_negative",
	"sema_type_is_not_subscriptable",
	"sema_subscript_must_evaluate_to_integer",
	"sema_subscript_out_of_bounds",
	"sema_subscript_negative_not_allowed_on_pointer",
	"sema_comparison_between_pointer_and_scalar",
	"sema_float_in_pointer_arithmetic",
	"sema_pointer_equality_non_zero_integer",
	"sema_pointer_integer_not_additive",
	"sema_pointer_arithmetic_not_additive",
	"sema_pointer_on_rhs_of_arithmetic",
	"sema_static_array_invalid_member",
	"sema_modulo_not_defined_on_floats",
	"sema_cant_take_reference_of_value",
	"sema_reference_operator_can_only_be_used_on_types_or_lvalues",
	"sema_dereference_operator_only_works_on_pointers",
	"sema_range_mismatched_types",
	"sema_range_non_scalar_not_supported",
	"sema_casting_between_non_scalar_types_not_supported",
	"sema_intrinsic_print_named_arg",
	"sema_unary_comptime_expr_not_comptime",
	"sema_static_array_unusally_large",
	"sema_tuple_struct_initializer_unknown_member",
	"sema_tuple_struct_initializer_cannot_cast_expr_to_member",
	"sema_tuple_struct_initializer_named_member_already_satisfied",
	"sema_tuple_struct_initializer_too_many_elements",
	"sema_tuple_cast_to_structured_not_yet_supported",
	"internal_valid_path_but_internal_err",
};

enum language {
	en,
	jp,
	esp,
};

enum severity {
	error,
	warning,
};

